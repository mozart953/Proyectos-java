/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Evaluacion2_WilsonPop_201840972_;

import java.io.*;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wilson Pop
 */
public class principalc extends javax.swing.JFrame {
    //Esta parte es para crear la tabla    
    DefaultTableModel modelo1;
    String acum[][] = {};
    String titulos[] = {"No.", "Token", "Descripción"};
    
    DefaultTableModel modelo2;
    String acum2[][]={};
    String tit2[]={"ID","Identificador", "Tipo de dato"};
    
    /**
     * Creates new form principalc
     */
    public principalc() {
        initComponents();   // bloque para crear tabla tambien
        modelo1 = new DefaultTableModel(acum, titulos);
        tabla.setModel(modelo1);
        
        modelo2 = new DefaultTableModel(acum2, tit2);
        tabla2.setModel(modelo2);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        entrada1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        entrada1.setColumns(20);
        entrada1.setRows(5);
        jScrollPane1.setViewportView(entrada1);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabla);

        jButton1.setText("Analizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Escribir el texto a analizar:");

        tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabla2);

        jButton2.setText("Leer archivo de texto");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Wilson Victor Alexander Pop Cac -201840972");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(225, 225, 225)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(1033, 1033, 1033))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Scanner leer = new Scanner (System.in);
        String entrada = this.entrada1.getText();
        String acum = "";
        String acum1 = "";
        String deci = "";
        String deci1 = "";
        String deci2 = "";
        String reemplazo = "";
        String r1 = "";
        String r2 = "";         //Esta parte es la parte principal,donde se llaman a las demás clases
        int co = 0;
        int fi = 0;
        int aum = 0;
        int uni = 0;
        int nume = 0;
        int resta = 0;
        int incremento = 0;
        String sv="";
        String sv1 = "";
        String aux = "";
        String aux2 = "";
        String aux3 = "";
        String varb ="";
        
        TipoWord corregir = new TipoWord();
        Crearchivotipos crear = new Crearchivotipos();
        Tokenscompiladores1 tab = new Tokenscompiladores1();
        metodosb ins =new metodosb ();
        
        if (entrada.charAt(entrada.length() - 1) != ' ') {
            aux2 += entrada + " ";
        } else {
            aux2 += entrada;
        }
        /* El ciclo for va separarndo en unos y ceros para determinar si existen coincidencias con los caracteres de 
        la clase tokens*/
        for (int i = 0; i < aux2.length(); i++) {
            acum += aux2.charAt(i);
            if (acum != "") {
                deci = tab.Identificador(acum);
                System.out.println(deci);
                if (deci == "verdadero") {
                    acum1 += "1";
                } else {
                    acum1 += "0";
                }
                acum = "";
            } else {
            }
        }

        System.out.println(acum1);
        //im

        for (int ar = 0; ar < aux2.length(); ar++) {
            if (aux2.charAt(ar) == '"') {
                incremento++;
            } else {
            }
        }

        if (incremento >= 2) {

            for (int wil = 0; wil < acum1.length(); wil++) {
                if (acum1.charAt(wil) == '0') {
                    if (aux2.charAt(wil) == '"') {
                        if (aum == 0) {
                            co = wil;
                            aum++;
                        } else if (aum == 1) {
                            fi = wil;
                            aum++;
                        } else {
                        }

                    }
                }
            }

            if (aum == 2) {
                resta = ((fi - co) + 1) - 2;
                for (int es = 0; es < resta; es++) {
                    r1 += "1";
                    System.out.println(r1);
                }
            }

            reemplazo = acum1.replace(acum1.substring(co + 1, fi), r1);
            System.out.println(reemplazo);
        }else{
            reemplazo=acum1;
        }
        
        

        //
        for (int ini = 0; ini < reemplazo.length() - 1; ini++) {
            if (reemplazo.charAt(ini) != '0' && reemplazo.charAt(ini + 1) == '0') {
                aux += aux2.charAt(ini);
                uni++;
                aux = "";
            } else if (reemplazo.charAt(ini) != '0' && reemplazo.charAt(ini + 1) != '0') {
                aux += aux2.charAt(ini);
            } else if (reemplazo.charAt(ini) == '0') {
                if (aux2.charAt(ini) != ' ') {
                    uni++;
                } else {
                }
            }

        }

        String acumi[] = new String[uni];
        String aumo[] = new String[uni];

        for (int il = 0; il < reemplazo.length() - 1; il++) {
            if (reemplazo.charAt(il) != '0' && reemplazo.charAt(il + 1) == '0') {
                aux3 += aux2.charAt(il);
                acumi[nume] = aux3;
                deci2 = tab.palares(aux3); //Para determinar si son palabras reservadas o identificadores
                aumo[nume] = deci2;
                aux3 = "";
                nume++;
            } else if (reemplazo.charAt(il) != '0' && reemplazo.charAt(il + 1) != '0') {
                aux3 += aux2.charAt(il);
            } else if (reemplazo.charAt(il) == '0') {
                if (aux2.charAt(il) != ' ') {
                    aux3 += aux2.charAt(il);
                    deci1 = tab.Operador(aux3);
                    if(deci1.equals("desconocido")){
                        if(aux3.equals(";")){
                            deci1="simbolo final";
                        }else{
                            deci1="desconocido";
                        }
                    }else{ }
                    acumi[nume] = aux3;
                    aumo[nume] = deci1;
                    aux3 = "";
                    nume++;
                }
            }

        }
        //
        int cant = nume+2;
        int cant2=nume+2;
        int anira = 0;
        int anira2=0;
                
        String array1[]=new String[cant]; 
        String array2[]=new String[cant2]; // identificadores
        String array3[]= new String [cant]; // tipos de datos
        String array4[]= new String [cant];
        array1[0]="-";
        array1[cant-1]="-";
        array4[0]="-";
        array4[cant-1]="-";
        
        for(int eje=1;eje<cant-1;eje++){
            array1[eje]=aumo[anira];
            array4 [eje]=acumi[anira];
            anira++;
        }
        
        for(int aja=0;aja<cant;aja++){
            System.out.println(array1[aja]);
            System.out.println("---------------------------------------------");
            System.out.println(array4[aja]);
        }
                
        for (int er=1;er<cant-1;er++){
            if(array1[er]=="palabra reservada" && array1[er+1]=="Identificador"){
                array2[anira2]=array4[er+1];
                array3[anira2]=array4[er];
                anira2++;
            }else if(array1[er]=="palabra reservada" && array1[er+1]!="Identificador"){
                array2[anira2]=" ";
                array3[anira2]=array4[er];
                anira2++;
            }else if(array1[er]=="Identificador" && array1[er-1]!="palabra reservada"){
                array2[anira2]=array4[er];
                array3[anira2]=" ";
                anira2++;
            }else{}
        }
               
        
        //
        String id [] = new String [anira2];
        for(int aup=0;aup<anira2;aup++){
            String neme="";
            neme = Integer.toString(aup);
            id[aup]=neme;
            String ord [] = {neme, array2[aup],array3[aup]};
            modelo2.addRow(ord);
        }
        // En esta parte ya se agregar los tokens encontrados a la tabla creada
        String x1="";
        
        ins.Agregascope(array4,array2);
        x1=ins.CrearTabla(id, ins.Agregaident(id, array2), ins.Agregatipo(id, array3),ins.Agregascope(array4,array2),anira2);
        if(x1.equals("noerror")){
            crear.Encontrartipos(array4, array1);
            System.out.println("------------------------------");
            crear.Encontraroperadores(array4,array1);
            System.out.println("------------------------------");
            crear.Proton(array4,array1);
            corregir.Configuracion(array4, array1);
            
        }else{}
        
        
        
        /*System.out.println("--------------------------------------------------");
        System.out.println("ID      IDENTIFICADOR       TIPO DE DATO");
        for(int ao=0;ao<anira2;ao++){
            System.out.println(id[ao]+ "        "+array2[ao] + "                " + array3[ao] + "\n");
        
        }*/
        
        //para buscar
        
        int ik=0;
        
        System.out.println("BUSCAR VARIABLE: ");
        varb = leer.nextLine();
        for (int empe=0;empe<anira2;empe++){
            if(varb.equals(array2[empe])){
                System.out.println("La id de la variable es: " + id[empe]);
                ik=1;
            }else{
            }
        }
 
        if(ik==0){
            System.out.println("La variable no fue encontrada.");
        }
        
        //Esta parte es para crear el archivo
        FileWriter fichero = null;
        PrintWriter pw = null;
        
        try{
            fichero = new FileWriter("C:\\Users\\Wilson Pop\\Desktop\\documentos\\Lenguajes formales y de programación\\COMPILADORES 1\\archivotext\\prueba.txt");
            pw = new PrintWriter(fichero);
            
            for(int op=0;op<nume;op++){
                if(aumo[op].equals("palabra reservada")){
                    sv+="<" + acumi[op] + ",tipodato>" + "";
                    sv1 +=sv;
                    sv="";
                }
                else if(aumo[op].equals("Identificador")){
                    sv+="<" + acumi[op] + ",identificador>" + "";
                    sv1+=sv;
                    sv="";
                }
                else if(aumo[op].equals("operador")){
                    sv+="<" + acumi[op] + ",operador>" + "";
                    sv1 +=sv;
                    sv="";
                }
                else if(aumo[op].equals("simbolo final")){
                    sv+="<" + acumi[op] + ",simbolofinal>" + "/"+"\n";     
                   // pw.println(sv);
                   sv1+=sv;
                    sv="";
                }else{}
            }
            
            if(sv1.charAt(sv1.length()-2)=='/'){
                pw.println(sv1);
            }else{
                pw.println(sv1+ "/");
            }
            
            
            
            
        }catch (Exception e){
            e.printStackTrace();
        }finally{
            try {
                if(null != fichero){
                    fichero.close();
                }
            }catch(Exception e2){
                e2.printStackTrace();
            }
        
        }
        
        //
        
        for (int emp = 0; emp < uni; emp++) {
            String nem = "";
            nem = Integer.toString(emp + 1);
            String lador[] = {nem, acumi[emp], aumo[emp]};
            modelo1.addRow(lador);
        }
        
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            
        //parte para la leer el archivo
            Reglas nari = new Reglas();
        
            File miArchivo;
            FileReader leer;
            
            String cadena;
            
            miArchivo = new File("C:\\Users\\Wilson Pop\\Desktop\\documentos\\Lenguajes formales y de programación\\COMPILADORES 1\\archivotext\\prueba.txt");
            String acu="";
            String acu1="";
            String acu2="";
            String acu3="";
            String ac="";
            int ini =0;
            int fin =0;
            int cont =0;
            int cont1 =0;
            String acum = "";
            String acum1 ="";
            
        try {
            leer = new FileReader(miArchivo);
            BufferedReader almacenamiento = new BufferedReader(leer);
            cadena="";
            while (cadena!=null){
                try {
                    cadena = almacenamiento.readLine();
                    if(cadena!=null){
                        System.out.println(cadena);
                        acu += cadena;
                    }
                    
                    
                } catch (IOException ex) {
                    Logger.getLogger(principalc.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
                try {
                    almacenamiento.close();
                    leer.close();
                } catch (IOException ex) {
                    Logger.getLogger(principalc.class.getName()).log(Level.SEVERE, null, ex);
                }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(principalc.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for(int r=0;r<acu.length();r++){
            if(acu.charAt(r)==','){
                ini = r+1;
            }else if(acu.charAt(r)=='>'){
                fin = r;
                acu1+=acu.substring(ini, fin);
                ac=acu.substring(ini, fin);
               /* if(ac.equals("simbolofinal")){
                    acu2 = nari.r2d2(acu1);
                    if(acu2.equals("correcta")){
                        acum +="1";
                    }else{
                        acum+="0";
                        cont++;
                    }
                    
                    acu3+=acu2;
                    acu1="";
                }else{}*/
               
                
            }else if(acu.charAt(r)=='/'){
                    acu2 = nari.r2d2(acu1);
                    if(acu2.equals("correcta")){
                        acum +="1";
                    }else{
                        acum+="0";
                        cont++;
                    }
                    
                    acu3+=acu2;
                    acu1="";
            }else{}
        
        }
        System.out.println(acu3 + " " +acum);
        
       if(cont==0){
           JOptionPane.showMessageDialog(rootPane, "Compilación exitosa");
       }else{
           for(int ene=0;ene<acum.length();ene++){
                if(acum.charAt(ene)=='0'){
                    acum1 += Integer.toString(ene+1)+",";
                    cont1++;
                }else{}
           }
           
           if(cont1>1){
               JOptionPane.showMessageDialog(rootPane, "Error en las líneas: " + acum1.substring(0, acum1.length()-1));
           }else{
               JOptionPane.showMessageDialog(rootPane, "Error en la línea: " + acum1.substring(0, acum1.length()-1) ) ;
           }
           
           
       
       }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principalc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea entrada1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tabla;
    private javax.swing.JTable tabla2;
    // End of variables declaration//GEN-END:variables
}
